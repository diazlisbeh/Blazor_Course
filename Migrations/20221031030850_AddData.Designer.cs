// <auto-generated />
using System;
using Blazor_Course.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Blazor_Course.Migrations
{
    [DbContext(typeof(InventaryContext))]
    [Migration("20221031030850_AddData")]
    partial class AddData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Blazor_Course.Entities.CategoryEntity", b =>
                {
                    b.Property<string>("CategotyId")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("CategotyId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategotyId = "ASH",
                            CategoryName = "Aseo Hogar"
                        },
                        new
                        {
                            CategotyId = "VDI",
                            CategoryName = "Video Juegos"
                        },
                        new
                        {
                            CategotyId = "TEC",
                            CategoryName = "Tecnologies"
                        },
                        new
                        {
                            CategotyId = "SCH",
                            CategoryName = "Escolares"
                        });
                });

            modelBuilder.Entity("Blazor_Course.Entities.InputOutputEntity", b =>
                {
                    b.Property<string>("InputOutputId")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsInput")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("StorageId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("InputOutputId");

                    b.HasIndex("StorageId");

                    b.ToTable("inOuts");
                });

            modelBuilder.Entity("Blazor_Course.Entities.ProductEntity", b =>
                {
                    b.Property<string>("ProductId")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("CategoryCategotyId")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CategotyId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ProductDescription")
                        .IsRequired()
                        .HasMaxLength(600)
                        .HasColumnType("varchar(600)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("TotalQuantity")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryCategotyId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Blazor_Course.Entities.StorageEntity", b =>
                {
                    b.Property<string>("StorageId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("WherehoueseId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("WherehouseWherehoueseId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("StorageId");

                    b.HasIndex("ProductId");

                    b.HasIndex("WherehouseWherehoueseId");

                    b.ToTable("Storages");
                });

            modelBuilder.Entity("Blazor_Course.Entities.WherehouseEntity", b =>
                {
                    b.Property<string>("WherehoueseId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("WherehoueseName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("WherehoueseId");

                    b.ToTable("Wherehouses");

                    b.HasData(
                        new
                        {
                            WherehoueseId = "bf7e3026-c51f-4617-b7b1-3fc54f5d4392",
                            WherehoueseName = "Principal"
                        },
                        new
                        {
                            WherehoueseId = "ae089ea0-7b6d-4f29-9ac6-195f51b0d4e1",
                            WherehoueseName = "Este"
                        },
                        new
                        {
                            WherehoueseId = "3f8b179d-9317-4984-b956-2b3b294287d9",
                            WherehoueseName = "Oeste"
                        });
                });

            modelBuilder.Entity("Blazor_Course.Entities.InputOutputEntity", b =>
                {
                    b.HasOne("Blazor_Course.Entities.StorageEntity", "Storage")
                        .WithMany("InputOutputs")
                        .HasForeignKey("StorageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Storage");
                });

            modelBuilder.Entity("Blazor_Course.Entities.ProductEntity", b =>
                {
                    b.HasOne("Blazor_Course.Entities.CategoryEntity", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryCategotyId");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Blazor_Course.Entities.StorageEntity", b =>
                {
                    b.HasOne("Blazor_Course.Entities.ProductEntity", "Product")
                        .WithMany("Storages")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Blazor_Course.Entities.WherehouseEntity", "Wherehouse")
                        .WithMany("Storages")
                        .HasForeignKey("WherehouseWherehoueseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Wherehouse");
                });

            modelBuilder.Entity("Blazor_Course.Entities.CategoryEntity", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Blazor_Course.Entities.ProductEntity", b =>
                {
                    b.Navigation("Storages");
                });

            modelBuilder.Entity("Blazor_Course.Entities.StorageEntity", b =>
                {
                    b.Navigation("InputOutputs");
                });

            modelBuilder.Entity("Blazor_Course.Entities.WherehouseEntity", b =>
                {
                    b.Navigation("Storages");
                });
#pragma warning restore 612, 618
        }
    }
}
